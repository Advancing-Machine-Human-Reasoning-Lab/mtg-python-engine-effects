for some reason only player0 can play and eternal witness cannot be played


Traceback (most recent call last):
  File "/Users/emanuelaseghehey/Development/mtg-python-engine-effects/MTG/player.py", line 196, in get_action
    can_target = card.targets()
  File "/Users/emanuelaseghehey/Development/mtg-python-engine-effects/MTG/gameobject.py", line 219, in targets
    targets_chosen = utils.choose_targets(self)
  File "/Users/emanuelaseghehey/Development/mtg-python-engine-effects/MTG/utils.py", line 58, in choose_targets
    if not source.has_valid_target():
  File "/Users/emanuelaseghehey/Development/mtg-python-engine-effects/MTG/gameobject.py", line 244, in has_valid_target
    has_valid_target = self.game.apply_to_zone(lambda _: True, _zone, lambda card: crit(self, card))
  File "/Users/emanuelaseghehey/Development/mtg-python-engine-effects/MTG/game.py", line 95, in apply_to_zone
    did_something = any([plyr.apply_to_zone(apply_func, _zone, condition)
  File "/Users/emanuelaseghehey/Development/mtg-python-engine-effects/MTG/game.py", line 95, in <listcomp>
    did_something = any([plyr.apply_to_zone(apply_func, _zone, condition)
  File "/Users/emanuelaseghehey/Development/mtg-python-engine-effects/MTG/player.py", line 726, in apply_to_zone
    if condition(card):
  File "/Users/emanuelaseghehey/Development/mtg-python-engine-effects/MTG/gameobject.py", line 244, in <lambda>
    has_valid_target = self.game.apply_to_zone(lambda _: True, _zone, lambda card: crit(self, card))
  File "<string>", line 1, in <lambda>
AttributeError: 'Permanent' object has no attribute 'zone_type'
Bad format.


----------------------------

Peel from Reality
add_targets("Peel from Reality", [lambda self, p: p.is_permanent and p.is_creature and p.controller is self.controller, lambda self, p: p.is_permanent and p.is_creature and p.controller is not self.controller], prompts=['Choose target creature you control\n', "Choose target creature you don't control\n"])
add_play_func_with_targets("Peel from Reality", lambda self, targets, is_legal_target: [[targets[i].bounce() for i in range(2) if is_legal_target[i]]])


Eternal Witness
add_targets("Eternal Witness", [lambda self, p: p.zone_type == 'GRAVEYARD'], prompts=['Choose target card from graveyard\n'])
add_play_func_with_targets("Eternal Witness", lambda self, targets, is_legal_target: [target[0].change_zone(self.controller.hand)])


------- ATTACKED -----------


player0's Exile (0 cards)
[]

PLAYER player1
life: 19

mana: Mana.WHITE: 0  Mana.BLUE: 0  Mana.BLACK: 0  Mana.RED: 0  Mana.GREEN: 0  Mana.COLORLESS: 0  Mana.GENERIC: 0





battlefield: 0

player1's Battlefield (0 cards)
[]




hand: 7

player1's Hand (7 cards)
['Eternal Witness', 'Plains', 'Eternal Witness', 'Eternal Witness', 'Plains', 'Eternal Witness', 'Plains']




library: 122

player1's Library (122 cards)
['Eternal Witness', 'Eternal Witness', 'Eternal Witness', "Ajani's Pridemate", 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Oreskos Swiftclaw', 'Eternal Witness', "Ajani's Pridemate", 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', "Ajani's Pridemate", 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Plains', 'Eternal Witness', 'Sungrace Pegasus', 'Soulmender', 'Eternal Witness', 'Eternal Witness', 'Tireless Missionaries', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Soulmender', 'Plains', 'Eternal Witness', 'Plains', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Plains', 'Eternal Witness', "Ajani's Pridemate", "Ajani's Pridemate", 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Plains', 'Plains', 'Soulmender', 'Soulmender', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Plains', 'Eternal Witness', 'Eternal Witness', 'Soulmender', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Plains', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Tireless Missionaries', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Sungrace Pegasus', 'Eternal Witness', 'Eternal Witness', 'Plains', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness', "Ajani's Pridemate", 'Eternal Witness', 'Eternal Witness', 'Sungrace Pegasus', 'Soulmender', 'Eternal Witness', 'Eternal Witness', 'Eternal Witness']




graveyard: 1

player1's Graveyard (1 cards)
['Eternal Witness']




exile: 0

player1's Exile (0 cards)
[]
What would you like to do? player0*, Step.COMBAT_DAMAGE


stack:  [[self.card.add_counter("+1/+1") if self.controller.make_choice( "Would you like to put a +1/+1 counter on %r?" % self.card) else None] from "Ajani's Pridemate" in 'BATTLEFIELD' (ID: 140487039965216) controlled by player0 (timestamp: 3.078935745191574) (ID: 140487313066208)]
What would you like to do? player1, Step.COMBAT_DAMAGE

[self.card.add_counter("+1/+1") if self.controller.make_choice( "Would you like to put a +1/+1 counter on %r?" % self.card) else None] from "Ajani's Pridemate" in 'BATTLEFIELD' (ID: 140487039965216) controlled by player0 (timestamp: 3.078935745191574)
Would you like to put a +1/+1 counter on "Ajani's Pridemate" in 'BATTLEFIELD' (ID: 140487039965216) controlled by player0 (timestamp: 3.078935745191574)
owner: player0
Status: ?y
What would you like to do? player0*, Step.COMBAT_DAMAGE

What would you like to do? player1, Step.COMBAT_DAMAGE

Step.END_OF_COMBAT
What would you like to do? player0*, Step.END_OF_COMBAT

What would you like to do? player1, Step.END_OF_COMBAT

Step.POSTCOMBAT_MAIN
What would you like to do? player0*, Step.POSTCOMBAT_MAIN

What would you like to do? player1, Step.POSTCOMBAT_MAIN

Step.END
What would you like to do? player0*, Step.END

What would you like to do? player1, Step.END

Step.CLEANUP
Step.UNTAP
Step.UPKEEP
What would you like to do? player1*, Step.UPKEEP

What would you like to do? player0, Step.UPKEEP

Step.DRAW
What would you like to do? player1*, Step.DRAW

What would you like to do? player0, Step.DRAW

Step.PRECOMBAT_MAIN
What would you like to do? player1*, Step.PRECOMBAT_MAIN

What would you like to do? player0, Step.PRECOMBAT_MAIN

Step.BEGINNING_OF_COMBAT
What would you like to do? player1*, Step.BEGINNING_OF_COMBAT

What would you like to do? player0, Step.BEGINNING_OF_COMBAT

Step.DECLARE_ATTACKERS
Step.DECLARE_BLOCKERS
Step.FIRST_STRIKE_COMBAT_DAMAGE
Step.COMBAT_DAMAGE
Step.END_OF_COMBAT
Step.POSTCOMBAT_MAIN
What would you like to do? player1*, Step.POSTCOMBAT_MAIN