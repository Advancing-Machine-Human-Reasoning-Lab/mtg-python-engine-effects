from MTG.card import *
from MTG.parsed_cards import *
from MTG.mana import *

def id_to_name(ID):
    return id_to_name_dict.get(ID, None)

def name_to_id(name):
    return name_to_id_dict.get(name, None)

def card_from_name(name):
    ID = name_to_id(name)
    if ID is not None:
        return eval(ID+'()')  # default card class generated by parse_cards.py
    else:
        return None


def make_activated_ability(cardname, cost, effect):
    card = eval(name_to_id(cardname))

    _costs = cost.split(', ')
    costs = ""
    if 'T' in _costs:
        costs += "self.tap();"
    # elif MANA

    card.activated_abilities.append((costs, effect))

    card._activated_abilities_costs.append(lambda self: exec(costs))
    card._activated_abilities_effects.append(lambda self: exec(effect))


make_activated_ability("Plains", 'T', 'self.controller.mana.add(Mana.WHITE, 1)')